{% liquid
  assign collection_father = collection.metafields.custom.collection_father
  assign subcollections = collection.metafields.custom.subcollections.value
%}

{%- if subcollections != blank -%}
  {%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  CSS
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {{ 'custom-collection-list.css' | asset_url | stylesheet_tag }}
  {{ 'custom-subcollection-list.css' | asset_url | stylesheet_tag }}

  {%- liquid
    assign stack_mobile = section.settings.stack_collections_mobile
    assign stack_desktop = section.settings.stack_collections
    assign stack_mobile_and_desktop = false

    if stack_desktop and stack_mobile
      assign stack_mobile_and_desktop = true
    endif
  -%}

  <style>
    #shopify-section-{{ section.id }} {
      {%- if stack_mobile or stack_mobile_and_desktop -%}
        --collection-list-items-per-row: {{ section.settings.collections_per_row_mobile | times: 1 }};
      {%- else -%}
        --collection-list-item-size: 84vw;
      {%- endif -%}

      {%- if section.settings.space_items -%}
        --collection-list-gap: 1.5rem;
      {%- endif -%}
    }

    #shopify-section-{{ section.id }} .collection-list {
      column-gap: {{ section.settings.column_gap }}px;
    }

    #shopify-section-{{ section.id }} .collection-list .collection_item_content {
      background-color: {{ section.settings.background_tags }};
      color: {{ section.settings.text_tags }};
    }

    @media screen and (min-width: 700px) {
      #shopify-section-{{ section.id }} {
        {%- if stack_mobile or stack_mobile_and_desktop -%}
          --collection-list-items-per-row: {{ 2 | at_most: section.settings.collections_per_row_desktop }};
        {%- else -%}
          --collection-list-item-size: 62vw;
        {%- endif -%}
      }
    }

    @media screen and (min-width: 1150px) {
      #shopify-section-{{ section.id }} {
        --collection-list-item-size: unset;
        --collection-list-items-per-row: {{ section.settings.collections_per_row_desktop }};

        {%- if section.settings.space_items -%}
          --collection-list-gap: 1.875rem;
        {%- endif -%}
      }
    }
  </style>

  {%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  LIQUID
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- assign remove_vertical_spacing = false -%}

  {%- if section.settings.subheading == blank and section.settings.title == blank and section.settings.content == blank -%}
    {%- assign reduce_vertical_spacing = true -%}

    {%- unless section.settings.space_items -%}
      {%- assign remove_vertical_spacing = true -%}
    {%- endunless -%}
  {%- endif -%}

  {%- assign color_scheme_hash = section.settings.color_scheme.settings.background_gradient | default: section.settings.color_scheme.settings.background | md5 -%}

  <div class="{% unless remove_vertical_spacing %}section-spacing {% if reduce_vertical_spacing %}section-spacing--tight{% endif %}{% endunless %} color-scheme color-scheme--{{ section.settings.color_scheme.id }} color-scheme--bg-{{ color_scheme_hash }} {% if section.settings.separate_section_with_border %}bordered-section{% endif %} c-collection-list c-subcollection-list">
    <div class="{% if section.settings.space_items %}container{% endif %}">
      <div class="section-stack">
        {%- render 'section-header', subheading: section.settings.subheading, heading: section.settings.title, content: section.settings.content, text_alignment: 'center' -%}

        {% capture collection_list %}
          {%- for block in subcollections -%}
            {%- assign collection = block -%}
            {%- assign collection_url = block.url -%}

            {%- capture collection_card_info -%}
              <div class="collection-card__content color-scheme color-scheme--{{ block.settings.color_scheme.id }} prose prose--tight {{ block.settings.content_position }}">
                {%- if block.settings.subheading != blank -%}
                  <p class="h6">{{- block.settings.subheading -}}</p>
                {%- endif -%}

                {%- if block.settings.title != blank -%}
                  <p class="h3">{{- block.settings.title -}}</p>
                {%- endif -%}

                {%- if block.settings.button_text != blank -%}
                  {%- render 'button', type: 'button', content: block.settings.button_text, style: block.settings.button_style, focusable: false -%}
                {%- endif -%}
              </div>
            {%- endcapture -%}

            {%- capture collection_card_content -%}
              <div class="collection_item_content">
                <div>
                  {{ collection.title | upcase }}
                </div>
              </div>
              {%- if section.settings.show_text_outside -%}
                {{- collection_card_info -}}
              {%- endif -%}
            {%- endcapture -%}

            {%- if collection_url != blank -%}
              <a href="{{ collection_url }}" class="collection-card {% if block.settings.expand_collection %}grow{% endif %} {% unless stack_mobile_and_desktop %}shrink-0 snap-center{% endunless %} {% if forloop.first %}is-selected{% endif %} group" {{ block.shopify_attributes }}>
                {{- collection_card_content -}}
              </a>
            {%- else -%}
              <div class="collection-card {% if block.settings.expand_collection %}grow{% endif %} {% unless stack_mobile_and_desktop %}shrink-0 snap-center{% endunless %} {% if forloop.first %}is-selected{% endif %} group" {{ block.shopify_attributes }}>
                {{- collection_card_content -}}
              </div>
            {%- endif -%}
          {%- endfor -%}
        {% endcapture %}

        {% if stack_mobile_and_desktop %}
          <div class="collection-list wrap {% if section.settings.show_text_outside %}collection-list--text-outside{% endif %}">
            {{ collection_list }}
          </div>
        {% else %}
          {%- if stack_desktop or stack_mobile -%}
            <div class="collection-list wrap {% if section.settings.show_text_outside %}collection-list--text-outside{% endif %} {% if stack_desktop and stack_mobile == false %}lg-max:hidden{% elsif stack_desktop == false and stack_mobile %}lg:hidden{% endif %}">
              {{ collection_list }}
            </div>
          {%- endif -%}

          <div class="floating-controls-container floating-controls-container--inside floating-controls-container--on-hover {% if stack_desktop and stack_mobile == false %}lg:hidden{% elsif stack_desktop == false and stack_mobile %}lg-max:hidden{% endif %}">
            {%- assign carousel_id = 'carousel-' | append: section.id -%}

            <carousel-prev-button class="floating-controls-container__control" aria-controls="{{ carousel_id }}">
              <button type="button" class="prev-next-button prev-next-button--prev circle-button circle-button--lg hover:animate-icon-inline" disabled>
                <span class="sr-only">{{ 'general.accessibility.previous' | t }}</span>
                {%- render 'icon' with 'arrow-left', direction_aware: true -%}
              </button>
            </carousel-prev-button>

            <scroll-carousel id="{{ carousel_id }}" group-cells allow-drag class="collection-list scroll-area {% if section.settings.show_text_outside %}collection-list--text-outside{% endif %} bleed lg:unbleed">
              {{ collection_list }}
            </scroll-carousel>

            <carousel-next-button class="floating-controls-container__control" aria-controls="{{ carousel_id }}">
              <button type="button" class="prev-next-button prev-next-button--next circle-button circle-button--lg hover:animate-icon-inline">
                <span class="sr-only">{{ 'general.accessibility.next' | t }}</span>
                {%- render 'icon' with 'arrow-right', direction_aware: true -%}
              </button>
            </carousel-next-button>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
{% else %}
  {% if collection.metafields.custom.subcollections_third_level != blank %}
    {{ 'custom-subcollection-list.css' | asset_url | stylesheet_tag }}
    <div class="container container-tags-third-level">
      {% for metafield in collection.metafields.custom.subcollections_third_level.value %}
        {% for filter in collection.filters %}
          {% if filter.label == metafield.tag_label %}
            {% assign filter_values_size = filter.values | size %}
            {% if filter_values_size > 0 %}
              {% for tag in filter.values %}
                <a href="{{ collection.url }}?{{ tag.param_name }}={{ tag.value }}" class="tag tag-third-level">
                  {{ tag.label }}
                </a>
              {% endfor %}
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endfor %}
    </div>
  {% endif %}
{%- endif -%}

{% schema %}
{
  "name": "# Subcollection list",
  "class": "shopify-section--collection-list",
  "tag": "section",
  "disabled_on": {
    "templates": ["password"],
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:global.colors.scheme",
      "default": "scheme-1"
    },
    {
      "type": "color",
      "id": "background_tags",
      "label": "Background tags",
      "default": "#EFEFEF"
    },
    {
      "type": "color",
      "id": "text_tags",
      "label": "Text tags",
      "default": "#454545"
    },
    {
      "type": "checkbox",
      "id": "separate_section_with_border",
      "label": "t:global.section.separate_section_with_border",
      "default": true
    },
    {
      "type": "select",
      "id": "image_size",
      "label": "t:global.image.size",
      "info": "t:global.image.ratio_avoid_cropping_info",
      "options": [
        {
          "value": "auto",
          "label": "t:global.sizes.original_image_ratio"
        },
        {
          "value": "xs",
          "label": "t:global.sizes.x_small"
        },
        {
          "value": "sm",
          "label": "t:global.sizes.small"
        },
        {
          "value": "md",
          "label": "t:global.sizes.medium"
        },
        {
          "value": "lg",
          "label": "t:global.sizes.large"
        }
      ],
      "default": "auto"
    },
    {
      "type": "checkbox",
      "id": "show_text_outside",
      "label": "t:sections.collection_list.show_text_outside",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "space_items",
      "label": "t:sections.collection_list.space_items",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "stack_collections",
      "label": "t:sections.collection_list.stack_collections",
      "default": true
    },
    {
      "type": "range",
      "id": "collections_per_row_desktop",
      "min": 1,
      "max": 5,
      "label": "t:sections.collection_list.collections_per_row_desktop",
      "default": 3
    },
    {
      "type": "checkbox",
      "id": "stack_collections_mobile",
      "label": "t:sections.collection_list.stack_collections_mobile",
      "default": true
    },
    {
      "type": "select",
      "id": "collections_per_row_mobile",
      "label": "t:sections.collection_list.collections_per_row_mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "default": 8,
      "label": "Column gap",
    },
    {
      "type": "header",
      "content": "t:global.section.header_category"
    },
    {
      "type": "inline_richtext",
      "id": "subheading",
      "label": "t:global.text.subheading"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "t:global.text.heading"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "t:global.text.content"
    }
  ],
  "presets": [
    {
      "name": "# Subcollection list",
      "category": "t:global.categories.collections"
    }
  ]
}
{% endschema %}
